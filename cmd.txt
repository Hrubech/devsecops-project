* Terraform Installation Script
wget -O- https://apt.releases.hashicorp.com/gpg | sudo gpg - dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
sudo apt update
sudo apt install terraform -y

* AWSCLI Installation Script
curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
sudo apt install unzip -y
unzip awscliv2.zip
sudo ./aws/install

* Configure Terraform
sudo vim /etc/environment
export AWS_ACCESS_KEY_ID=YOUR_ACCESS_KEY_ID   # Change this
export AWS_SECRET_ACCESS_KEY=YOUR_SECRET_ACCESS_KEY # Change this
export AWS_DEFAULT_REGION=us-east-1  # Set your aws default region

* Configure AWS CLI
aws configure
AWS Access Key ID [None]: YOUR_ACCESS_KEY_ID   # Change this
AWS Secret Access Key [None]: YOUR_SECRET_ACCESS_KEY   # Change this
Default region name [None]: us-east-1   # Set your aws default region
Default output format [None]: json

* Création du bucket s3
aws s3api create-bucket --bucket devsecops-project-s3 --region us-east-1
aws s3 ls (show s3 list)

* Création d'une table DynamoDB pour le verrouillage
aws dynamodb create-table \
    --table-name Lock-Files \
    --attribute-definitions AttributeName=LockID,AttributeType=S \
    --key-schema AttributeName=LockID,KeyType=HASH \
    --billing-mode PAY_PER_REQUEST
aws dynamodb list-tables --region us-east-1 (show table)

* Création de l'infra sur AWS
terraform init
terraform validate
terraform fmt
terraform plan -var-file=terraform.tfvars
terraform apply -var-file=terraform.tfvars --auto-approve

chmod 400 key_name.pem
ssh -i "key_name.pem" user@ip_address

jenkins --version
docker --version
docker ps
terraform --version
kubectl version
aws --version
trivy --version

sudo cat /var/lib/jenkins/secrets/initialAdminPassword

* Configure AWS CLI (jenkins server)
aws configure
AWS Access Key ID [None]: YOUR_ACCESS_KEY_ID   # Change this
AWS Secret Access Key [None]: YOUR_SECRET_ACCESS_KEY   # Change this
Default region name [None]: us-east-1   # Set your aws default region
Default output format [None]: json

* Install plugins
AWS Credentials
Pipeline: AWS Steps

* Configure EKS Cluster (jenkins Server)
aws eks update-kubeconfig --region us-east-1 --name eks-cluster
kubectl get nodes
kubectl create namespace tetris

* Configure argoCD controller on our EKS cluster
kubectl create namespace argocd
kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/v2.4.7/manifests/install.yaml
kubectl get pods -n argocd
kubectl patch svc argocd-server -n argocd -p '{"spec": {"type": "LoadBalancer"}}'
sudo apt install jq -y
export ARGOCD_SERVER=`kubectl get svc argocd-server -n argocd -o json | jq --raw-output '.status.loadBalancer.ingress[0].hostname'`
export ARGOCD_SERVER=$(kubectl get svc argocd-server -n argocd -o json | jq --raw-output '.status.loadBalancer.ingress[0].hostname')
echo $ARGOCD_SERVER
export ARGO_PWD=`kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d`
echo $ARGO_PWD

* Install plugins
Docker
Docker Commons
Docker Pipeline
Docker API
docker-build-step
Eclipse Temurin installer
NodeJS
OWASP Dependency-Check
SonarQube Scanner

terraform destroy -var-file=terraform.tfvars --auto-approve